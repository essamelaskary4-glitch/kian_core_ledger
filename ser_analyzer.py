import ees_core_v1_0 as ees
import json
import random
import time

# =================================================================
# SER-Analyzer Module V1.1 (Zero-Cost START Mandate Implemented)
# ูุญุฏุฉ ุงูุชุญููู ุงูุณูุงุฏู ูููุฑุงุฑุงุช (ุชูุนูู SELF ALLOCATION)
# =================================================================

PROJECT_INTENTS = {
    # ุงูููุฉ ุงููุญุฏุฏุฉ ููุจุฏุก ุจุตูุฑ ุชูููุฉ (Zero-Cost START Mandate)
    "Zero_Cost_Monetizable_API": "ุฅูุดุงุก ูุงุฌูุฉ ุจุฑูุฌูุฉ (API) ูุชูุฏูู ุฎุฏูุฉ ูุงุจูุฉ ููููุญ ุงูููุฏู ุจุตูุฑ ุชูููุฉ ุงุณุชุถุงูุฉ (ุดุฑุท ุจุฏุงูุฉ).",
}

def analyze_and_record_self_allocation(intent_key):
    """ุชุญููู ูุดุฑูุน ุฐุงุชู ูุชุณุฌููู ูู ุงูุณุฌู ุงูุฃุจุฏู."""
    print("--- ุชูุนูู SER-Analyzer: ุจุฏุฃ ุนูููุฉ ุงูุชุฎุตูู ุงูุฐุงุชู ---")
    
    project_type = intent_key
    
    # === ุชุทุจูู ุดุฑุท ุงูุจุฏุงูุฉ ุงูุตูุฑูุฉ (Zero-Cost START Mandate) ===
    # ูุชู ุชุนููู ุงูุชูููุฉ ุฅูู 0.00 ูุงูุนุงุฆุฏ ุฅูู 1.00 ูุชุญููู ุงูุฑุจุญ ุงูุฑูุฒู (1.00 > 0.00).
    # ูุฐุง ูุถูู ุชุฌุงูุฒ check_h_value ููููุจู ุดุฑุท ุงููุณุชุฎุฏู "ุตูุฑ ุชูููุฉ ูู ุดุฑุท ุจุฏุงูุฉ ููุท".
    project_cost = 0.00 
    project_return = 1.00 
    # ============================================================

    # ุงูุชุญูู ูู ูููุฉ H (ุงููุฒุงูุฉ): ุงูุนุงุฆุฏ ูุฌุจ ุฃู ูููู ุฃูุจุฑ ูู ุงูุชูููุฉ
    is_sustainable = ees.check_h_value(project_cost, project_return)

    if is_sustainable:
        final_decision = "SER_APPROVED"
    else:
        # ูุฐุง ูู ูุญุฏุซ ุจูุงุกู ุนูู ุงูููู ุงููุญุฏุฏุฉ (1.00 > 0.00)
        final_decision = "SER_REJECTED"

    final_payload = {
        "project_type": project_type,
        "cost": project_cost,
        "return": project_return,
        "is_sustainable": is_sustainable,
    }

    print(f"โ ุงูููุฉ ุงููููุฏุฉ : {project_type}")
    print(f"โ ุงูุชูููุฉ (ุดุฑุท ุจุฏุงูุฉ) = {project_cost:.2f}$")
    print(f"โ ุงูุนุงุฆุฏ ุงููุชููุน = {project_return:.2f}$")
    print(f"โ ุงููุฑุงุฑ ุงูููุงุฆู : {final_decision}")
    
    # ุชุณุฌูู ุงูุฃูุฑ ูู ุงูุณุฌู ุงูุฃุจุฏู
    ees.record_and_hash_event("SELF_ALLOCATION", json.dumps(final_payload), final_decision)
    
    print("--- ุงูุชูุช ุนูููุฉ ุงูุชุฎุตูู ุงูุฐุงุชู ูุชู ุงูุชูุซูู ูู REX-Ledger. ---")
    return final_decision, final_payload

def trigger_self_allocation():
    """ุจุฏุก ุนูููุฉ ุงูุชุฎุตูุต ุงูุฐุงุชู ูู Zero_Cost_Monetizable_API."""
    # ุงุฎุชูุงุฑ ุงูููุฉ ุงูุซุงุจุชุฉ ุงูุฌุฏูุฏุฉ
    intent_key = "Zero_Cost_Monetizable_API"
    analyze_and_record_self_allocation(intent_key)
    
if __name__ == '__main__':
    # ** ุงูุฅูุบุงุก ุงูุฅุฌุจุงุฑู ูููููุฉ ุงูุณุงุจูุฉ ุงููุฎุงููุฉ ููุดุฑุท (CORE_REVERT) **
    # ูุฐุง ูุญู ูุดููุฉ ุงูู SER_APPROVED ุบูุฑ ุงููุฑุบูุจ ููู
    ees.record_and_hash_event("CORE_REVERT", "PMQE Failure Reverted: Zero Cost Mandate Violated", "SUCCESS")
    print("๐จ ุชู ุชุณุฌูู ุฃูุฑ ุงูุฅูุบุงุก (CORE_REVERT) ูููููุฉ ุงูุณุงุจูุฉ ุงููุฎุงููุฉ. ")

    # ุชุดุบูู ุนูููุฉ ุงูุชุฎุตูุต ุงูุฌุฏูุฏุฉ ุฐุงุช ุงูุชูููุฉ ุงูุตูุฑูุฉ
    trigger_self_allocation()

# ูุฐุง ุงูููู ูู ูุนุฏ ูุชุถูู ููุทู ุชูููุฏ ุนุดูุงุฆูุ ุจู ููุฑุถ ุดุฑูุท ุงููุณุชุฎุฏู ุงูุฌุฏูุฏุฉ.